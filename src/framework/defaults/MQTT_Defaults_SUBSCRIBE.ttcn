/*******************************************************************************
* Copyright (c) 2018 Relayr GmbH
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Alexander Kaiser
*   Sascha Hackel
*   Axel Rennoch
*******************************************************************************/

module MQTT_Defaults_SUBSCRIBE
{
  /*
  * @see http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718021
  *
  * @desc Client subscribe request
  *
  * @remark Packet Type: 0x08
  * @remark   Direction: Client -> Server
  */

  import from MQTT_TestSystem_Common all;

  import from MQTTasp_CtrlFunct all;
  import from MQTT_Functions_Protocol all;
  import from MQTT_Functions_Network all;

  import from MQTT_Templates_MQTTasp all;
  import from MQTT_Templates_SUBSCRIBE all;
  import from MQTT_Templates_SUBACK all;

  import from MQTTasp_CtrlFunct all;

  import from MQTTasp_Types all;
  import from IPL4asp_Types all;

  group BrokerDefaults
  {
    altstep a_mqtt_subscribe_default(timer p_timer) runs on MQTT_Broker_MTC
    {
      var MQTTasp_Message v_received;
      var template MQTTasp_Message vt_subscribe_valid := mw_mqtt_message(mw_subscribe_valid);
      var template MQTTasp_Message vt_subscribe_all := mw_mqtt_message(mw_subscribe_all);

      [] MQTT_PCO.receive(vt_subscribe_valid) -> value v_received {
        log("[DEFAULT](Received SUBSCRIBE): ", v_received)
        // TODO: check the QoS and send SUBACK if required
        repeat;
      }
      [] MQTT_PCO.receive(vt_subscribe_all) -> value v_received {
        log("[DEFAULT](Received invalid SUBSCRIBE): ", v_received)

        repeat;
      }
    } // altstep a_mqtt_subscribe_default
  } // group BrokerDefaults
}
