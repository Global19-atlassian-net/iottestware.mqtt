/*******************************************************************************
 * Copyright (c) 2018 Relayr GmbH
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html 
 *
 * Contributors:
 *   Alexander Kaiser
 *   Sascha Kretzschmann
 *******************************************************************************/
module MQTT_TestControl {

import from MQTT_TestCases all;
import from MQTT_Pixits all;


  control
  {
    for(var integer i := 0; i < sizeof(PICS_Selection); i := i + 1)
    {
      var PICS s := PICS_Selection[i];
      /**
       * Note: Do not change this part!
       * This code is automatically generated by PICS_Utils.py from mts_tst_mqtt_BROKER_tps.tplan2
       */
      select(s)
      {
          case(PICS_BROKER_AUTH)
          {
              log("PICS_BROKER_AUTH");
              execute(TC_MQTT_BROKER_CONNECT_012());
              execute(TC_MQTT_BROKER_CONNECT_013());
              execute(TC_MQTT_BROKER_CONNECT_014());
              execute(TC_MQTT_BROKER_CONNECT_015());
              execute(TC_MQTT_BROKER_CONNECT_016());
              execute(TC_MQTT_BROKER_CONNECT_024());
              execute(TC_MQTT_BROKER_CONNECT_025());
              execute(TC_MQTT_BROKER_CONNACK_008());
          }
          case(PICS_BROKER_QOS_2)
          {
              log("PICS_BROKER_QOS_2");
              execute(TC_MQTT_BROKER_SUBACK_003());
              execute(TC_MQTT_BROKER_SUBACK_005());
              execute(TC_MQTT_BROKER_SUBACK_006());
          }
          case(PICS_BROKER_QOS_1)
          {
              log("PICS_BROKER_QOS_1");
              execute(TC_MQTT_BROKER_SUBACK_002());
              execute(TC_MQTT_BROKER_SUBACK_004());
              execute(TC_MQTT_BROKER_SUBACK_005());
          }
          case(PICS_BROKER_LWT)
          {
              log("PICS_BROKER_LWT");
              execute(TC_MQTT_BROKER_CONNECT_005());
              execute(TC_MQTT_BROKER_CONNECT_006());
              execute(TC_MQTT_BROKER_CONNECT_008());
              execute(TC_MQTT_BROKER_CONNECT_009());
              execute(TC_MQTT_BROKER_CONNECT_022());
              execute(TC_MQTT_BROKER_CONNECT_023());
          }
          case(PICS_BROKER_BASIC)
          {
              log("PICS_BROKER_BASIC");
              execute(TC_MQTT_BROKER_CONNECT_001());
              execute(TC_MQTT_BROKER_CONNECT_002());
              execute(TC_MQTT_BROKER_CONNECT_003());
              execute(TC_MQTT_BROKER_CONNECT_004());
              execute(TC_MQTT_BROKER_CONNECT_005());
              execute(TC_MQTT_BROKER_CONNECT_006());
              execute(TC_MQTT_BROKER_CONNECT_007());
              execute(TC_MQTT_BROKER_CONNECT_008());
              execute(TC_MQTT_BROKER_CONNECT_009());
              execute(TC_MQTT_BROKER_CONNECT_010());
              execute(TC_MQTT_BROKER_CONNECT_011());
              execute(TC_MQTT_BROKER_CONNECT_012());
              execute(TC_MQTT_BROKER_CONNECT_013());
              execute(TC_MQTT_BROKER_CONNECT_015());
              execute(TC_MQTT_BROKER_CONNECT_017());
              execute(TC_MQTT_BROKER_CONNECT_018());
              execute(TC_MQTT_BROKER_CONNECT_019());
              execute(TC_MQTT_BROKER_CONNECT_020());
              execute(TC_MQTT_BROKER_CONNECT_021());
              execute(TC_MQTT_BROKER_CONNACK_001());
              execute(TC_MQTT_BROKER_CONNACK_002());
              execute(TC_MQTT_BROKER_CONNACK_004());
              execute(TC_MQTT_BROKER_CONNACK_005());
              //execute(TC_MQTT_BROKER_CONNACK_007());
              execute(TC_MQTT_BROKER_CONNACK_008());
              execute(TC_MQTT_BROKER_SUBSCRIBE_001());
//              execute(TC_MQTT_BROKER_SUBSCRIBE_002());
//              execute(TC_MQTT_BROKER_SUBSCRIBE_003());
//              execute(TC_MQTT_BROKER_SUBSCRIBE_004());
              execute(TC_MQTT_BROKER_SUBSCRIBE_005());
//              execute(TC_MQTT_BROKER_SUBSCRIBE_006());
              execute(TC_MQTT_BROKER_SUBSCRIBE_007());
              execute(TC_MQTT_BROKER_SUBACK_001());
              execute(TC_MQTT_BROKER_SUBACK_004());
              execute(TC_MQTT_BROKER_SUBACK_005());
              execute(TC_MQTT_BROKER_SUBACK_006());
              execute(TC_MQTT_BROKER_UNSUBSCRIBE_001());
//              execute(TC_MQTT_BROKER_UNSUBSCRIBE_002());
//              execute(TC_MQTT_BROKER_UNSUBSCRIBE_003());
              execute(TC_MQTT_BROKER_UNSUBSCRIBE_004());
              execute(TC_MQTT_BROKER_UNSUBACK_001());
              execute(TC_MQTT_BROKER_UNSUBACK_002());
              execute(TC_MQTT_BROKER_PINGREQ_001());
              execute(TC_MQTT_BROKER_PINGRESP_001());
              execute(TC_MQTT_BROKER_DISCONNECT_001());
              execute(TC_MQTT_BROKER_DISCONNECT_002());
          }
          case(PICS_BROKER_RTND)
          {
              log("PICS_BROKER_RTND");
              execute(TC_MQTT_BROKER_CONNECT_006());
              execute(TC_MQTT_BROKER_CONNACK_003());
              execute(TC_MQTT_BROKER_CONNACK_004());
              execute(TC_MQTT_BROKER_CONNACK_006());
//              execute(TC_MQTT_BROKER_RTND_MSGS_001());
//              execute(TC_MQTT_BROKER_RTND_MSGS_002());
//              execute(TC_MQTT_BROKER_RTND_MSGS_003());
          }
      }
    }
  }
}
