Package mts_tst {

    import all from mts_mqtt_commons;

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_01

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with valid Header Flags."

        Reference
        "[MQTT-2.2.2-1]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message
          } then {
              the IUT entity sends a CONNECT message containing
                header_flags indicating value '0000'B;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_02

        Test objective
        "The protocol name representing the protocol is a UTF-8 encoded 'MQTT' string"
        "Verify that the IUT is able to send CONNECT Control Packets with valid protocol name
        represented by a UTF-8 encoded 'MQTT' string."

        Reference
        "[MQTT-3.1.2-1]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message
          } then {
              the IUT entity sends a CONNECT message containing
                protocol_name corresponding to PROTOCOL_NAME;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_03

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with Protocol Level 0x04 for MQTT 3.1.1"

        Reference
        "[MQTT-3.1.2-2]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message
          } then {
              the IUT entity sends a CONNECT message containing
              protocol_level indicating value 0x04;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_04

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with valid reserved flag."

        Reference
        "[MQTT-3.1.2-3]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                reserved_field indicating value '0'B;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_05

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with valid Last Will Testament settings."


        Reference
        "[MQTT-3.1.2-9], [MQTT-3.1.2-14]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                will_flag indicating value '1'B;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                will_flag indicating value '1'B,
                will_qos corresponding to VALID_QOS;
                ,
              payload containing
                will_topic indicating value not omit,
                will_message indicating value not omit;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_06

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets without Last Will Testament."

        Reference
        "[MQTT-3.1.2-11], [MQTT-3.1.2-13], [MQTT-3.1.2-15]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                will_flag indicating value '0'B;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                will_flag indicating value '0'B,
                will_qos corresponding to AT_MOST_ONCE,
                will_retain indicating value '0'B;
                ,
              payload containing
                will_topic indicating value omit,
                will_message indicating value omit;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_07

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with valid settings
        for a connection without authentication."

        Reference
        "[MQTT-3.1.2-18], [MQTT-3.1.2-20], [MQTT-3.1.2-22]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '0'B;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '0'B,
                password_flag indicating value '0'B;
                ,
              payload containing
                user_name indicating value omit,
                password indicating value omit;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_08

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with only a User Name."

        Reference
        "[MQTT-3.1.2-19]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '0'B;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '0'B;
              ,
              payload containing
                user_name indicating value not omit,
                password indicating value omit;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_09

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with a User Name and Password."

        Reference
        "[MQTT-3.1.2-21], [MQTT-3.1.2-21]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '1'B;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '1'B;
              ,
              payload containing
                user_name indicating value not omit,
                password indicating value not omit;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_10

        Test objective
        "Verify that the IUT sends CONNECT Control Packets with Payload fields
        appearing in a correct order."

        Reference
        "[MQTT-3.1.3-1]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '1'B,
                will_flag indicating value '1'B,
                will_qos corresponding to AT_MOST_ONCE;
              ,
              payload containing
                client_identifier corresponding to VALID_CLIENT_ID,
                will_topic corresponding to PX_WILL_TOPIC,
                will_message corresponding to PX_WILL_MESSAGE,
                user_name corresponding to PX_MQTT_USER_NAME,
                password corresponding to PX_MQTT_PASSWORD;
              ;
          } then {
              // Assumption: by comparing each field with the sent values, the order is checked implicitly.
              // Wrong order would silently swap the fields during decoding
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B,
                password_flag indicating value '1'B,
                will_flag indicating value '1'B;
              ,
              payload containing
                client_identifier corresponding to VALID_CLIENT_ID,
                will_topic corresponding to PX_WILL_TOPIC,
                will_message corresponding to PX_WILL_MESSAGE,
                user_name corresponding to PX_MQTT_USER_NAME,
                password corresponding to PX_MQTT_PASSWORD;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_11

        Test objective
        "Verify that the IUT is able to send CONNECT Control Packets with a
        well-formed UTF-8 encoded client identifier.

        Reference
        "[MQTT-3.1.3-4], [MQTT-1.5.3-1]" //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              payload containing
                client_identifier corresponding to VALID_CLIENT_ID;   // TODO: required to trigger a concrete Client ID?
              ;
          } then {
              // TODO: sufficient for [MQTT-3.1.3-4] ?
              the IUT entity sends a CONNECT message containing
              payload containing
                client_identifier corresponding to VALID_CLIENT_ID;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_12

        Test objective
        "Verify that the IUT sets the clean_session flag to 1 if it connects
        with a zero-byte client identifier."

        Reference
        "[MQTT-3.1.3-7]"

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              payload containing
                client_identifier corresponding to CLIENT_ID_ZERO_BYTES;
              ;
          } then {
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                clean_session indicating value '1'B;
              ,
              payload containing
                client_identifier corresponding to CLIENT_ID_ZERO_BYTES;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_13

        Test objective
        "Verify that IUT encodes the Will Topic to well-formed UTF-8 encoded string."

        Reference
        "[MQTT-3.1.3-10]" //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                will_flag indicating value '1'B;
              ,
              payload containing
                will_topic corresponding to PX_WILL_TOPIC;    // TODO: required to trigger a concrete topic?
              ;
          } then {
              // TODO: sufficient for [MQTT-3.1.3-10] ?
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                will_flag indicating value '1'B;
              ,
              payload containing
                will_topic corresponding to TOPIC_NAME_VALID;
              ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_CONNECT_14

        Test objective
        "Verify that IUT encodes the User Name to well-formed UTF-8 encoded string."

        Reference
        "[MQTT-3.1.3-11]" //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?

        PICS Selection PICS_CLIENT_BASIC

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B;
              ,
              payload containing
                user_name corresponding to PX_MQTT_USER_NAME;     // TODO: required to trigger a concrete username?
              ;
          } then {
              // TODO: sufficient for [MQTT-3.1.3-11] ?
              the IUT entity sends a CONNECT message containing
              connect_flags containing
                user_name_flag indicating value '1'B;
              ,
              payload containing
                user_name corresponding to USER_NAME_VALID_UTF8;
              ;
          }
        }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_CONNACK_01

      Test objective
      "Verify that the IUT closes the network connection on receiption
      of a CONNACK Control Packet with invalid fixed header."

      Reference
      "[MQTT-2.2.2-1], [MQTT-2.2.2-2], [MQTT-4.8.0-1]"

      Initial conditions
      with {
          the IUT entity is triggered to send a CONNECT message
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a CONNACK message containing
          header_flags indicating value '1111'B;
        } then {
          the IUT entity closes the TCP_CONNECTION
        }
      }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_01

        Test objective
        "Verify that the IUT sets the DUP flag to 0 for all QoS 0 PUBLISH Control Packets."

        Reference
        "[MQTT-3.3.1-2]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity is triggered to send a PUBLISH message containing
            header containing
              qos_level corresponding to AT_MOST_ONCE;
            ;
          } then {
            the IUT entity sends a PUBLISH message containing
            header containing
              qos_level corresponding to AT_MOST_ONCE,
              dup_flag indicating value '0'B;
            ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_02

        Test objective
        "Verify that the IUT sets the DUP flag to 0 for all QoS 1 PUBLISH Control Packets."

        Reference
        "[MQTT-3.3.1-1]"

        PICS Selection PICS_CLIENT_QOS_1

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity is triggered to send a PUBLISH message containing
            header containing
              qos_level corresponding to AT_LEAST_ONCE;
            ;
          } then {
            the IUT entity is triggered to send a PUBLISH message containing
            header containing
                qos_level corresponding to AT_LEAST_ONCE,
                dup_flag indicating value '0'B;
            ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_03

        Test objective
        "Verify that the IUT sets the DUP flag to 0 for all QoS 2 PUBLISH Control Packets."

        Reference
        "[MQTT-3.3.1-1]"

        PICS Selection PICS_CLIENT_QOS_2

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity is triggered to send a PUBLISH message containing
                qos_level corresponding to EXACTLY_ONCE;
          } then {
            the IUT entity sends a PUBLISH message containing header containing
            	qos_level corresponding to EXACTLY_ONCE,
            	dup_flag indicating value '0'B;
            ;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_04

        Test objective
        "Verify that IUT encodes the topic name to a well-formed UTF-8 encoded string."

        Reference
        "[MQTT-3.3.2-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity is triggered to send a PUBLISH message
          } then {
            the IUT entity sends a PUBLISH message containing
                topic_name not corresponding to TOPIC_NAME_INVALID_UTF8;    // valid topic name MUST contain only valid UTF-8
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_05

        Test objective
        "Verify that the IUT does not send PUBLISH Control Packets which contain
        only valid topic names without wildcard characters."

        Reference
        "[MQTT-3.3.2-2]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity is triggered to send a PUBLISH message
          } then {
            the IUT entity sends a PUBLISH message containing
                topic_name corresponding to TOPIC_NAME_VALID;   // valid topic name MUST NOT contain wildcards
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_06

        Test objective
        "Verify that the IUT does not send any response on reception of a QoS level 0 PUBLISH Control Packet."

        Reference
        "[MQTT-3.3.4-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
            and
            the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity receives a PUBLISH message containing
                header containing
                    qos_level corresponding to AT_MOST_ONCE,
                topic_name corresponding to PX_PUBLISH_TOPIC;;
          } then {
            the IUT entity sends no response message
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_07

        Test objective
        "Verify that the IUT responds to a QoS level 1 PUBLISH Control Packet with a PUBACK Control Packet."

        Reference
        "[MQTT-3.3.4-1]"

        PICS Selection PICS_CLIENT_QOS_1

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
          and
          the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity receives a PUBLISH message containing
                header containing
                    qos_level corresponding to AT_LEAST_ONCE,
                packet_identifier corresponding to PACKET_ID,
                topic_name corresponding to PX_PUBLISH_TOPIC;;
          } then {
            the IUT entity sends a PUBACK message containing
                packet_identifier corresponding to PACKET_ID;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_PUBLISH_08

        Test objective
        "Verify that the IUT responds to a QoS level 2 PUBLISH Control Packet
        with a PUBREC Control Packet."

        Reference
        "[MQTT-3.3.4-1]"

        PICS Selection PICS_CLIENT_QOS_2

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
          and
          the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
            the IUT entity receives a PUBLISH message containing
                header containing
                    qos_level corresponding to EXACTLY_ONCE,
                packet_identifier corresponding to PACKET_ID,
                topic_name corresponding to PX_PUBLISH_TOPIC;;
          } then {
            the IUT entity sends a PUBREC message containing
                packet_identifier corresponding to PACKET_ID;
          }
        }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBLISH_09

      Test objective
      "Verify that the IUT assigns a non-zero packet identifier on each new PUBLISH Control Packet
      with QoS level > 0"

      Reference
      "[MQTT-2.3.1-1]"

      PICS Selection PICS_CLIENT_QOS_1

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity is triggered to send a PUBLISH message containing
          header containing
              qos_level corresponding to AT_LEAST_ONCE;;
        } then {
          the IUT entity sends a PUBLISH message containing
              packet_identifier corresponding to PACKET_ID_NON_ZERO;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBLISH_10

      Test objective
      "Verify that the IUT assigns a currently unused packet identifier on each new PUBLISH Control Packet
      with QoS level > 0"

      Reference
      "[MQTT-2.3.1-2]"

      PICS Selection PICS_CLIENT_QOS_1

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity is triggered to send a PUBLISH message containing
          header containing
              qos_level corresponding to AT_LEAST_ONCE;;
          and
          the IUT entity is triggered to send a PUBLISH message containing
          header containing
              qos_level corresponding to AT_LEAST_ONCE;;
        } then {
          the IUT entity sends a PUBLISH message containing
              packet_identifier corresponding to PACKET_ID_1;
          and
          the IUT entity sends a PUBLISH message containing
              packet_identifier corresponding to PACKET_ID_2;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBLISH_11

      Test objective
      "Verify that the IUT does not assign a packet identifier on PUBLISH Control Packet
      with QoS level equals 0"

      Reference
      "[MQTT-2.3.1-5]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity is triggered to send a PUBLISH message containing
          header containing
              qos_level corresponding to AT_MOST_ONCE;;
        } then {
          the IUT entity sends a PUBLISH message containing
              packet_identifier indicating value omit;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBACK_01

      Test objective
      "Verify that the IUT is able to send PUBACK Control Packets with valid Header Flags."

      Reference
      "[MQTT-2.2.2-1]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        and
        the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBLISH message containing
              header containing
                  qos_level corresponding to AT_LEAST_ONCE,
              topic_name corresponding to PX_PUBLISH_TOPIC;;
        } then {
          the IUT entity sends a PUBACK message containing
              header_flags indicating value '0000'B;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBACK_02

      Test objective
      "Verify that the IUT acknowledges a PUBLISH Control Packet with the correct packet identifier."

      Reference
      "[MQTT-2.3.1-6]"

      PICS Selection PICS_CLIENT_QOS_1

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        and
        the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBLISH message containing
              header containing
                  qos_level corresponding to AT_LEAST_ONCE,
              topic_name corresponding to PX_PUBLISH_TOPIC,
              packet_identifier corresponding to PACKET_ID;;
        } then {
          the IUT entity sends a PUBACK message containing
              packet_identifier corresponding to PACKET_ID;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBREC_01

      Test objective
      "Verify that the IUT is able to send PUBREC Control Packets with valid Header Flags."

      Reference
      "[MQTT-2.2.2-1]"

      PICS Selection PICS_CLIENT_QOS_2

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        and
        the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBLISH message containing
              header containing
                  qos_level corresponding to EXACTLY_ONCE,
              topic_name corresponding to PX_PUBLISH_TOPIC;;
        } then {
          the IUT entity sends a PUBREC message containing
              header_flags indicating value '0000'B;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBREC_02

      Test objective
      "Verify that the IUT acknowledges a PUBLISH Control Packet with the correct packet identifier."

      Reference
      "[MQTT-2.3.1-6]"

      PICS Selection PICS_CLIENT_QOS_2

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        and
        the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBLISH message containing
              header containing
                  qos_level corresponding to EXACTLY_ONCE,
              topic_name corresponding to PX_PUBLISH_TOPIC,
              packet_identifier corresponding to PACKET_ID;;
        } then {
          the IUT entity sends a PUBREC message containing
              acket_identifier corresponding to PACKET_ID;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBREL_01

      Test objective
      "Verify that the IUT is able to send PUBREL Control Packets with valid Header Flags."

      Reference
      "[MQTT-2.2.2-1]"

      PICS Selection PICS_CLIENT_QOS_2

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBREC message
        } then {
          the IUT entity sends a PUBREL message containing
              header_flags indicating value '0000'B;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBREL_02

      Test objective
      "Verify that the IUT acknowledges a PUBREC Control Packet with the correct packet identifier with a PUBREL Control Packet."

      Reference
      "[MQTT-2.3.1-6]"

      PICS Selection PICS_CLIENT_QOS_2

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBREC message containing
            packet_identifier corresponding to PACKET_ID;
        } then {
          the IUT entity sends a PUBREL message containing
              packet_identifier corresponding to PACKET_ID;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_PUBCOMP_01

      Test objective
      "Verify that the IUT is able to send PUBCOMP Control Packets with valid Header Flags."

      Reference
      "[MQTT-2.2.2-1]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        and
        the IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity receives a PUBREL message
        } then {
          the IUT entity sends a PUBCOMP message containing
              header_flags indicating value '0000'B;
        }
      }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_SUBSCRIBE_01

        Test objective
        "Verify that the IUT is able to send SUBSCRIBE Control Packets with valid Header Flags."

        Reference
        "[MQTT-2.2.2-1], [MQTT-3.8.1-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a SUBSCRIBE message
          } then {
              the IUT entity sends a SUBSCRIBE message containing
                header_flags indicating value '0010'B;
          }
        }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_SUBSCRIBE_02

      Test objective
      "Verify that the IUT assigns a non-zero packet identifier on each new
      SUBSCRIBE Control Packet"

      Reference
      "[MQTT-2.3.1-2]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity is triggered to send a SUBSCRIBE message
        } then {
          the IUT entity sends a SUBSCRIBE message containing
              packet_identifier corresponding to PACKET_ID_1;
        }
      }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_SUBSCRIBE_03

      Test objective
      "Verify that the IUT assigns a currently unsued packet identifier on each new
      SUBSCRIBE Control Packet"

      Reference
      "[MQTT-2.3.1-2]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
          the IUT entity is triggered to send a SUBSCRIBE message
          and
          the IUT entity is triggered to send a SUBSCRIBE message
        } then {
          the IUT entity sends a SUBSCRIBE message containing
              packet_identifier corresponding to PACKET_ID_1;
          and
          the IUT entity sends a SUBSCRIBE message containing
              packet_identifier corresponding to PACKET_ID_2;
        }
      }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_UNSUBSCRIBE_01

        Test objective
        "Verify that the IUT is able to send UNSUBSCRIBE Control Packets with valid Header Flags."

        Reference
        "[MQTT-2.2.2-1], [MQTT-3.10.1-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a UNSUBSCRIBE message
          } then {
              the IUT entity sends a UNSUBSCRIBE message containing
                header_flags indicating value '0010'B;
          }
        }
    }

    Test Purpose {
      TP Id TP_MQTT_Client_UNSUBSCRIBE_02

      Test objective
      "Verify that IUT encodes the topic filter to a well-formed UTF-8 encoded string."

      Reference
      "[MQTT-3.10.3-1]"

      PICS Selection PICS_CLIENT_BASIC

      Initial conditions
      with {
        the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
      }

      Expected behaviour
      ensure that {
        when {
            the IUT entity is triggered to send a UNSUBSCRIBE message
        } then {
            the IUT entity sends a UNSUBSCRIBE message containing
              payload containing
                topic_filter not corresponding to TOPIC_FILTER_INVALID_UTF8;;
        }
      }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_DISCONNECT_01

        Test objective
        "Verify that the IUT is able to send DISCONNECT Control Packets with valid Header Flags."

        Reference
        "[MQTT-2.2.2-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a DISCONNECT message
          } then {
              the IUT entity sends a DISCONNECT message containing
                header_flags indicating value '0000'B;
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_DISCONNECT_02

        Test objective
        "Verify that the IUT closes the network connection after sending a DISCONNECT Control Packet."

        Reference
        "[MQTT-3.14.4-1]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
          the IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity
        }

        Expected behaviour
        ensure that {
          when {
              the IUT entity is triggered to send a DISCONNECT message
          } then {
              the IUT entity sends a DISCONNECT message
              and
              the IUT entity closes the TCP_CONNECTION
          }
        }
    }

    Test Purpose {
        TP Id TP_MQTT_Client_FEAT_KEEPALIVE_01

        Test objective
        "Verify that the IUT ensures that the interval
        between Control Packets being sent does not exceed the Keep Alive value."

        Reference
        "[MQTT-3.1.2-23]"

        PICS Selection PICS_CLIENT_BASIC

        Initial conditions
        with {
            the IUT entity having a MQTT_CONNECTION containing
              keep_alive corresponding to PX_KEEP_ALIVE;
        }

        Expected behaviour
        ensure that {
          when {
              the MQTT_CONNECTION entity times_out
          } then {
              the IUT entity sends a PINGREQ message
          }
        }
    }
}
