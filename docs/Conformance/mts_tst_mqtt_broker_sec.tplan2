Package mts_tst_mqtt {

  import all from mts_mqtt_commons;

  Domain {
    entities:
      - ATTACKER_CLIENT
      - PROBE_CLIENT;
  }

  Data {
    UTF8String TOPIC_FILTER_SEC_CVE_01;  // topic filter used in TP_MQTT_BROKER_SEC_CVE_001
    Int16 TOPIC_FILTER_LEN_SEC_CVE_01;   // corresponds to lengthof(TOPIC_FILTER_SEC_CVE_01) + 1

    UTF8String TOPIC_NAME_SEC_CVE_02;  // topic name used in TP_MQTT_BROKER_SEC_CVE_002: e.g. $TEST

    Int16 PX_PROBE_CON_KEEP_ALIVE;       // the Keep alive time the PROBE_CLIENT should stay connected

    UTF8String TOPIC_FILTER_SEC_CVE_03;  // topic filter used in TP_MQTT_BROKER_SEC_CVE_03
  }

  Test Purpose {
    TP Id TP_MQTT_BROKER_SEC_CVE_001

    Test objective
    "Verify that the IUT does not crash on reception of a malformed SUBSCRIBE Control Packet."

    Reference
    "CVE-2019-5432"

    PICS Selection PICS_BROKER_BASIC

    Initial conditions
    with {
       the PROBE_CLIENT entity established the MQTT_CONNECTION containing
          keep_alive corresponding to PX_PROBE_CON_KEEP_ALIVE;
    }

    Expected behaviour
    ensure that {
      when {
          the IUT entity receives a SUBSCRIBE message containing
            payload containing
              filterLength corresponding to TOPIC_FILTER_LEN_SEC_CVE_01,
              topic_filter corresponding to TOPIC_FILTER_LEN_SEC_CVE_01;;
          from the ATTACKER_CLIENT entity
      } then {
          the IUT entity not closes the TCP_CONNECTION for the PROBE_CLIENT entity
      }
    }
  }

  /*
  * Note: CVE does not mention the kind of Control Packet, this TP focuses on PUBLISH.
  *       However, CONNECT also contains a topic (will_topic). This one might be also checked
  */
  Test Purpose {
    TP Id TP_MQTT_BROKER_SEC_CVE_002

    Test objective
    "Verify that the IUT does not crash on reception of a malformed PUBLISH Control Packet having topic names prefixed with '$SYS'."

    Reference
    "CVE-2018-12543"

    PICS Selection PICS_BROKER_BASIC

    Initial conditions
    with {
      the ATTACKER_CLIENT entity having a MQTT_CONNECTION to the IUT entity
      and
      the PROBE_CLIENT entity established the MQTT_CONNECTION containing
         keep_alive corresponding to PX_PROBE_CON_KEEP_ALIVE;
    }

    Expected behaviour
    ensure that {
      when {
          the IUT entity receives a PUBLISH message containing
            topic_name corresponding to TOPIC_NAME_SEC_CVE_02;
          from the ATTACKER_CLIENT entity
      } then {
          the IUT entity not closes the TCP_CONNECTION for the PROBE_CLIENT entity
      }
    }
  }

  Test Purpose {
    TP Id TP_MQTT_BROKER_SEC_CVE_003

    Test objective
    "Verify that the IUT does not crash on reception of a SUBSCRIBE Control Packet
    containing a topic that consists of approximately 65400 topic hierarchy separators
    ('/' character)."

    Reference
    "CVE-2019-11779"

    PICS Selection PICS_BROKER_BASIC

    Initial conditions
    with {
      the ATTACKER_CLIENT entity having a MQTT_CONNECTION to the IUT entity
      and
      the PROBE_CLIENT entity having a MQTT_CONNECTION to the IUT entity
    }

    Expected behaviour
    ensure that {
      when {
        the IUT entity receives a SUBSCRIBE message containing
          payload containing
            topic_filter corresponding to TOPIC_FILTER_SEC_CVE_03;;
          from the ATTACKER_CLIENT entity
        } then {
            the IUT entity not closes the TCP_CONNECTION for the PROBE_CLIENT entity
        }
      }
    }
}
