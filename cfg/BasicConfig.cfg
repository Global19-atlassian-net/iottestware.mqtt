[MODULE_PARAMETERS]
	tsp_addresses :=
	{
		{
			id := "mqtt_server",
			hostName := "127.0.0.1",
			#hostName := "mqtt.relayr.io",
			#hostName := "broker.hivemq.com",
			#hostName := "iot.eclipse.org",
			portNumber := 1883
		},
		{
			id := "mqtt_client",
			hostName := "0.0.0.0",
			portNumber := 45678,

			credentials :=
			{
				clientId := "TS7QVyCxbSK+aDkbDT3Zy5A",
				username := "4bb415c8-2c5b-48af-9a0e-46c34f7672e4",
				password := "TPp1G3f9.IfR",
				topicName := "/v1/4bb415c8-2c5b-48af-9a0e-46c34f7672e4/"
			}
		}
	}

[LOGGING]
	# In this section you can specify the name of the log file and the classes of events
	# you want to log into the file or display on console (standard error).

	LogFile := "../logs/%e.%h-%r.%s"
	FileMask := LOG_ALL | DEBUG | MATCHING
	ConsoleMask := ERROR | WARNING | TESTCASE | STATISTICS | PORTEVENT
	LogSourceInfo := Yes
	AppendFile := No
	TimeStampFormat := DateTime
	LogEventTypes := Yes
	SourceInfoFormat := Single
	LogEntityName := Yes

[TESTPORT_PARAMETERS]
	# In this section you can specify parameters that are passed to Test Ports.

	*.p.interfaceName:="enp0s3"
	*.p.debug:="YES"
	*.p.noDelay:="YES"

#*.p.map_behavior:="connect" //possible values:"none", "listen" , "connect"
#*.p.map_protocol:="tls" //possible values: "udp", "tcp", "sctp", "tls"
#*.p.RemotePort:="8883"
#*.p.Remotheost:="127.0.0.1"
#*.p.defaultListeningPort:="0"
#*.p.defaultListeningHost:="0.0.0.0"
#*.p.lazy_conn_id_handling:="yes"
#*.p.debug := "Yes"
#*.p.ssl_reconnect_attempts := "100"
#*.p.ssl_verify_certificate := "No"
#*.p.ssl_trustedCAlist_file:= "../cert/ca.crt"
#*.p.ssl_certificate_chain_file := "../cert/server.crt"
#*.p.ssl_private_key_file := "../cert/server.key"


[DEFINE]
# In this section you can create macro definitions,
# that can be used in other configuration file sections except [INCLUDE] and [ORDERED_INCLUDE].

[INCLUDE]
# To use configuration settings given in other configuration files,
# the configuration files just need to be listed in this section, with their full or relative pathnames.

[ORDERED_INCLUDE]
# To use configuration settings given in other configuration files,
# the configuration files just need to be listed in this section, with their full or relative pathnames.

[EXTERNAL_COMMANDS]
# This section can define external commands (shell scripts) to be executed by the ETS
# whenever a control part or test case is started or terminated.

#BeginTestCase := ""
#EndTestCase := ""
#BeginControlPart := ""
#EndControlPart := ""

[EXECUTE]
# In this section you can specify what parts of your test suite you want to execute.

#MQTT_TestControl.control

### CONNECT Control Packet
	MQTT_TestCases.tc_mqtt_broker_connect_001
#	MQTT_TestCases.tc_mqtt_broker_connect_002
#	MQTT_TestCases.tc_mqtt_broker_connect_003
#	MQTT_TestCases.tc_mqtt_broker_connect_004 #RESERVED FLAG
#	MQTT_TestCases.tc_mqtt_broker_connect_005
#	MQTT_TestCases.tc_mqtt_broker_connect_006 
#	MQTT_TestCases.tc_mqtt_broker_connect_007
#	MQTT_TestCases.tc_mqtt_broker_connect_008
#	MQTT_TestCases.tc_mqtt_broker_connect_009
#	MQTT_TestCases.tc_mqtt_broker_connect_010
#	MQTT_TestCases.tc_mqtt_broker_connect_011
#	MQTT_TestCases.tc_mqtt_broker_connect_012
#	MQTT_TestCases.tc_mqtt_broker_connect_013 #FIX: Usernameflag 0 + Username 1
#	MQTT_TestCases.tc_mqtt_broker_connect_014
#	MQTT_TestCases.tc_mqtt_broker_connect_015 #FIX: Passwordflag 0 + Password 1
#	MQTT_TestCases.tc_mqtt_broker_connect_016
#	MQTT_TestCases.tc_mqtt_broker_connect_017
#	MQTT_TestCases.tc_mqtt_broker_connect_018
#	MQTT_TestCases.tc_mqtt_broker_connect_019
#	MQTT_TestCases.tc_mqtt_broker_connect_020 #uncomment @update 
#	MQTT_TestCases.tc_mqtt_broker_connect_021 #uncomment @update 
#	MQTT_TestCases.tc_mqtt_broker_connect_022 #uncomment @update 
#	MQTT_TestCases.tc_mqtt_broker_connect_023 #uncomment @update 
#	MQTT_TestCases.tc_mqtt_broker_connect_024 #uncomment @update 
#	MQTT_TestCases.tc_mqtt_broker_connect_025 #uncomment @update 

### CONNACK Control Packet
#	MQTT_TestCases.tc_mqtt_broker_connack_001
#	MQTT_TestCases.tc_mqtt_broker_connack_002
#	MQTT_TestCases.tc_mqtt_broker_connack_003
#	MQTT_TestCases.tc_mqtt_broker_connack_004
#	MQTT_TestCases.tc_mqtt_broker_connack_005
#	MQTT_TestCases.tc_mqtt_broker_connack_006
#	MQTT_TestCases.tc_mqtt_broker_connack_007
#	MQTT_TestCases.tc_mqtt_broker_connack_008

### SUBSCRIBE Control Packet
#   MQTT_TestCases.tc_mqtt_broker_subscribe_001
#   MQTT_TestCases.tc_mqtt_broker_subscribe_005
#   MQTT_TestCases.tc_mqtt_broker_subscribe_007

### SUBACK Control Packet
#   MQTT_TestCases.tc_mqtt_broker_suback_001
#   MQTT_TestCases.tc_mqtt_broker_suback_002
#   MQTT_TestCases.tc_mqtt_broker_suback_003
#   MQTT_TestCases.tc_mqtt_broker_suback_004
#   MQTT_TestCases.tc_mqtt_broker_suback_005
#   MQTT_TestCases.tc_mqtt_broker_suback_006 #what causes return code 0x80?




[GROUPS]
# This section consists of rules restricting the location of created PTCs.

[MAIN_CONTROLLER]
	# The options herein control the behavior of MC.

	TCPPort := 0
	KillTimer := 10.0
	UnixSocketsEnabled := Yes 
# NumHCs := 0
# LocalAddress := 
